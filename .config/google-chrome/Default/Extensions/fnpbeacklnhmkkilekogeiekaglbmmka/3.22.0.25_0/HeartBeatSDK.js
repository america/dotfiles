!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.HeartbeatSDK=e():t.HeartbeatSDK=e()}(self,(()=>(()=>{"use strict";var t={d:(e,i)=>{for(var n in i)t.o(i,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:i[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{default:()=>H});const i={DATA_SOURCE_OPTIONS:{portal:"WEB_APPLICATION",mobile:"MOBILE_APPLICATION",extension:"BROWSER_EXTENSION"},TELEMETRYSCD:{GOOGLE_ANALYTICS_URL:"https://www.google-analytics.com/collect",REQUEST_TYPE:"POST"},TELEMETRYDEFAULTPARAMETERS:{APPLICATION_NAME:"an",APPLICATION_VERSION:"av",CLIENT_ID:"cid",DATA_SOURCE:"ds",TRACKING_ID:"tid",USER_LANGUAGE:"ul",GOOGLE_ANALYTICS_PROTOCOL_VERSION:"v",ANONYMIZE_IP:"aip",EVENT_CATEGORY:"ec",EVENT_ACTION:"ea",TYPE:"t",CLIENT_ID_CUSTOM_DIMENSION:SymBfw.telemetryConstants.parameters.CUSTOM_DIMENSION2,BROWSER_NAME:SymBfw.telemetryConstants.parameters.CUSTOM_DIMENSION6},TELEMETRY_CONSTANTS:{INSTALL_PING:"Install",HEART_BEAT_PING:"HeartBeat",USER_BASE:"UserBase",EVENT:"event"},CONTAINER_NAME:"HEARTBEAT_SDK_CONTAINER",INSTALL_PING_STATUS_KEY:"installPingStatusKey",INSTALL_NORTON_PING_STATUS_KEY:"nortonInstallPingStatusKey",INSTALL_PING_STATUS:{ALREADY_SENT:"0",SUCCESS:"1",FAILED:"2"},HB_LASTUPDATETIME_KEY:"hbLastUpdateTimeKey",NORTON_HB_LASTUPDATETIME_KEY:"nortonHBLastUpdateTimeKey",HB_POLLING_TIME:18e5,HB_POLLING_TIME_IN_MINUTES:30,HB_TELEMETRY_UNKNOWN:"unknown",HB_TELEMETRY_ENABLED:"enabled",HB_TELEMETRY_DISABLED:"disabled",NORTON_TELEMETRY_PARAMETERS:{PRODUCT:"product",VERSION:"version",ENABLED:"enabled",TRANSPORT:"transport",MODULE:"module",CLIENT_TRIGGER_TIME:"ctt",CLIENT_SENT_TIME:"cst",PING_TYPE:"E"},NORTON_TELEMETRY_CONFIGS:{SEND_ATTEMPTS:1,RETRY_INTERVAL:5e3,PING_TYPES:{INSTALL:"install",HEARTBEAT:"heartbeat"}},HB_ALARM_NAME:"b5c1d0df-513c-4592-aad4-71cb3c603c16"},{isObject:n,isFunction:a,isString:r}=SymBfw.utils,{error:s}=SymBfw.logger;class l{constructor(){this._prodName=null,this._prodVersion=null,this._machineId=null,this._dataSource=null,this._apiKey=null,this._userLang=null,this._retryIntervalMillis=864e5,this.install={},this.install.isInstallPingEnabled=!0,this.install.isFreshInstall=null,this.heartBeat={},this.heartBeat.isHeartBeatPingEnabled=!0,this.heartBeat.heartBeatIntervalInMilliSec=null,this._isLocalStorageNeeded=!1}set prodName(t){this._prodName=t}get prodName(){return this._prodName}set prodVersion(t){this._prodVersion=t}get prodVersion(){return this._prodVersion}set machineId(t){this._machineId=t}get machineId(){return this._machineId}set apiKey(t){this._apiKey=t}get apiKey(){return this._apiKey}set dataSource(t){this._dataSource=i.DATA_SOURCE_OPTIONS[t]}get dataSource(){return this._dataSource}set userLanguage(t){this._userLang=t}get userLanguage(){return this._userLang}set retryIntervalMillis(t){this._retryIntervalMillis=t}get retryIntervalMillis(){return this._retryIntervalMillis}set isInstallPingEnabled(t){this.install.isInstallPingEnabled=t}get isInstallPingEnabled(){return this.install.isInstallPingEnabled}set isFreshInstall(t){this.install.isFreshInstall=t}get isFreshInstall(){return this.install.isFreshInstall}set isHeartBeatPingEnabled(t){this.heartBeat.isHeartBeatPingEnabled=t}get isHeartBeatPingEnabled(){return this.heartBeat.isHeartBeatPingEnabled}set heartBeatIntervalInMilliSec(t){this.heartBeat.heartBeatIntervalInMilliSec=t}get heartBeatIntervalInMilliSec(){return this.heartBeat.heartBeatIntervalInMilliSec}set isLocalStorageNeeded(t){this._isLocalStorageNeeded=t}get isLocalStorageNeeded(){return this._isLocalStorageNeeded}set additionalInstallPingParams(t){if(n(t)){for(const[e,i]of Object.entries(t))r(e)||s("custom dimension value should be a string"),a(i)||s(`${i} is not a function`);this._additionalInstallPingParams=t}}get additionalInstallPingParams(){return this._additionalInstallPingParams}set additionalHeartBeatPingParams(t){if(n(t)){for(const[e,i]of Object.entries(t))r(e)||s("custom dimension value should be a string"),a(i)||s(`${i} is not a function`);this._additionalHeartBeatPingParams=t}}get additionalHeartBeatPingParams(){return this._additionalHeartBeatPingParams}}class o{async perform(){throw new Error("Derived class needs to implement this function")}}const c=Object.freeze(new class{constructor(){this._container={}}get container(){return this._container.storage}set container(t){this._container.storage=t}get isLocalStorageNeeded(){return this._container.isLocalStorageNeeded}set isLocalStorageNeeded(t){this._container.isLocalStorageNeeded=t}loadContainer(t){return new Promise(((e,n)=>{this.isLocalStorageNeeded=t,this.isLocalStorageNeeded?(this.container=window.localStorage,e(!0)):SymBfw.settings.loadSettingsContainer(i.CONTAINER_NAME,!0,((t,i,a)=>{(!1===t||SymBfw.utils.isNil(i))&&n(a),this.container=i,e(!0)}))}))}getContainerByName(t){if(SymBfw.utils.isNil(t)||SymBfw.utils.isNil(this.container))throw new Error("Unable to retrieve the container value");return this.isLocalStorageNeeded?this.container.getItem(t):this.container.getObject(t)}setContainerByName(t,e){if(SymBfw.utils.isNil(t)||SymBfw.utils.isNil(this.container))throw new Error("Unable to set the container value");this.isLocalStorageNeeded?this.container.setItem(t,e):this.container.setObject(t,e)}}),_=c,{isNil:h}=SymBfw.utils,d=i.TELEMETRYDEFAULTPARAMETERS,g=new class{constructor(){this.defaultParameters={},this.prodName=null,this.prodVersion=null,this.machineId=null,this.dataSource=null,this.apiKey=null,this.userLang=null}init(t){if(h(t)||0===Object.keys(t).length)throw new Error("configObj cannot be null");this.prodName=t.prodName,this.prodVersion=t.prodVersion,this.machineId=t.machineId,this.dataSource=t.dataSource,this.apiKey=t.apiKey,this.userLang=t.userLanguage}_constructQueryParams(t){let e="";for(const[i,n]of Object.entries(t))e+=`${i}=${n}&`;return e=e.substring(0,e.length-1),e}_constructDefaultParams(){let t=null;return this.defaultParameters={[d.APPLICATION_NAME]:this.prodName,[d.APPLICATION_VERSION]:this.prodVersion,[d.CLIENT_ID]:this.machineId,[d.DATA_SOURCE]:this.dataSource,[d.TRACKING_ID]:this.apiKey,[d.USER_LANGUAGE]:this.userLang,[d.GOOGLE_ANALYTICS_PROTOCOL_VERSION]:1,[d.ANONYMIZE_IP]:1,[d.TYPE]:i.TELEMETRY_CONSTANTS.EVENT,[d.CLIENT_ID_CUSTOM_DIMENSION]:this.machineId,[d.BROWSER_NAME]:SymBfw.globals.BROWSER},t=this._constructQueryParams(this.defaultParameters),t}async send(t){let e;if(h(t))return Promise.reject("parameters are required for sending telemetry events");e=this._constructDefaultParams(),e+=`&${this._constructQueryParams(t)}`;const n={method:i.TELEMETRYSCD.REQUEST_TYPE,body:e};try{return 200===(await fetch(i.TELEMETRYSCD.GOOGLE_ANALYTICS_URL,n)).status?Promise.resolve("telemetry sent successfully"):Promise.reject("Error in sending telemetry")}catch(t){return Promise.reject("Error in sending telemetry")}}},{alarmHelper:E,utils:{isntNil:u}}=SymBfw;class T extends o{constructor(){super(),this._containerKeyName=null,this._hbPingInterval=null,this._hbPingRetryInterval=null,this._updateInterval=null,this._additionalHeartBeatPingParams=null}_getCurrentUTCTimestamp(){return Math.floor((new Date).getTime())}_checkPingTimeArrived(){const t=JSON.parse(_.getContainerByName(this._containerKeyName));return!!SymBfw.utils.isNil(t)||t+this._hbPingInterval<this._getCurrentUTCTimestamp()}async _constructHeartBeatPing(){const t={[i.TELEMETRYDEFAULTPARAMETERS.EVENT_CATEGORY]:i.TELEMETRY_CONSTANTS.USER_BASE,[i.TELEMETRYDEFAULTPARAMETERS.EVENT_ACTION]:i.TELEMETRY_CONSTANTS.HEART_BEAT_PING};if(u(this._additionalHeartBeatPingParams))for(const[e,i]of Object.entries(this._additionalHeartBeatPingParams))t[e]=await i();return t}async perform(t){if(SymBfw.utils.isEmptyObject(t))throw new Error("HeartBeat ping configuration is empty");if(this._containerKeyName=i.HB_LASTUPDATETIME_KEY,this._hbPingInterval=t.heartBeatIntervalInMilliSec,this._hbPingRetryInterval=t.retryIntervalMillis,this._updateInterval=t.heartBeatIntervalInMilliSec,this._additionalHeartBeatPingParams=t._additionalHeartBeatPingParams||null,t.isHeartBeatPingEnabled)try{await this._sendHeartBeatPing()}catch(t){SymBfw.logger.error("Failed to send the Telemetry")}}async _registerScheduler(){await E.setAlarm(i.HB_ALARM_NAME,{periodInMinutes:i.HB_POLLING_TIME_IN_MINUTES})}async _sendHeartBeatPing(){if(this._checkPingTimeArrived()){const t=await this._constructHeartBeatPing();try{await g.send(t),_.setContainerByName(this._containerKeyName,this._getCurrentUTCTimestamp())}catch(t){SymBfw.logger.debug("Failed to send the Telementry and retry interval set")}}this._registerScheduler()}}const{utils:N}=SymBfw;class I extends o{constructor(){super(),this._container=null,this._additionalInstallPingParams=null}get container(){return this._container}set container(t){this._container=t}async perform(t){if(N.isEmptyObject(t))throw new Error("Install Ping configuration is missing");return!!t.isInstallPingEnabled&&(this.container=_,this._canTriggerInstallPing(t)&&(this._additionalInstallPingParams=t._additionalInstallPingParams,await this._sendInstallPing()),!0)}_canTriggerInstallPing(t){const{isFreshInstall:e}=t;let n=!1;const a=this.container.getContainerByName(i.INSTALL_PING_STATUS_KEY);if(N.isNil(a)){if(e)return!0;this.container.setContainerByName(i.INSTALL_PING_STATUS_KEY,i.INSTALL_PING_STATUS.ALREADY_SENT)}else i.INSTALL_PING_STATUS.FAILED===a&&(n=!0);return n}async _sendInstallPing(){const t=await this._constructInstallPing();let e=null;try{await g.send(t),e=i.INSTALL_PING_STATUS.SUCCESS}catch(t){e=i.INSTALL_PING_STATUS.FAILED}finally{this.container.setContainerByName(i.INSTALL_PING_STATUS_KEY,e)}}async _constructInstallPing(){const t={[i.TELEMETRYDEFAULTPARAMETERS.EVENT_CATEGORY]:i.TELEMETRY_CONSTANTS.USER_BASE,[i.TELEMETRYDEFAULTPARAMETERS.EVENT_ACTION]:i.TELEMETRY_CONSTANTS.INSTALL_PING};if(N.isntNil(this._additionalInstallPingParams))for(const[e,i]of Object.entries(this._additionalInstallPingParams))t[e]=await i();return t}}const{utils:m}=SymBfw,S=new class{constructor(){this.hbConfigs=null,this.handleSchedulerEvent=this.handleSchedulerEvent.bind(this)}async init(t){if(!(t instanceof l&&this._isValidConfigObj(t)))throw new TypeError("HeartBeat SDK initialization Failed - Invalid Configuration Object");try{const{isLocalStorageNeeded:e}=t;await _.loadContainer(e),g.init(t),(new I).perform(t),(new T).perform(t),this._storeHBConfig(t)}catch(t){SymBfw.logger.error("HB initialization Failed :",t.message)}}_storeHBConfig(t){!t.isInstallPingEnabled&&t.isHeartBeatPingEnabled&&(this.hbConfigs=t)}_isValidConfigObj(t){const e=Object.values(t);for(const t in e)if(e[t]instanceof Object){if(!this._isValidConfigObj(e[t]))return!1}else if(m.isNil(e[t]))return!1;return!0}async handleSchedulerEvent(t){t&&t.name&&t.name===i.HB_ALARM_NAME&&(m.isNil(this.hbConfigs)||await this.init(this.hbConfigs))}};SymBfw.alarmHelper.registerAlarmListener(S.handleSchedulerEvent);const{isObject:P,isFunction:p,isString:A}=SymBfw.utils,{error:L}=SymBfw.logger;class f{constructor(){this._prodName=null,this._prodVersion=null,this._machineId=null,this._dataSource=null,this._apiKey=null,this._userLanguage=null,this._isLocalStorageNeeded=!1,this._pingIntervalInMillis=null,this._isMOTEnabled=null,this._pingName=null,this._pingData=null}set prodName(t){this._prodName=t}get prodName(){return this._prodName}set prodVersion(t){this._prodVersion=t}get prodVersion(){return this._prodVersion}set machineId(t){this._machineId=t}get machineId(){return this._machineId}set apiKey(t){this._apiKey=t}get apiKey(){return this._apiKey}set dataSource(t){this._dataSource=i.DATA_SOURCE_OPTIONS[t]}get dataSource(){return this._dataSource}set userLanguage(t){this._userLanguage=t}get userLanguage(){return this._userLanguage}set isLocalStorageNeeded(t){this._isLocalStorageNeeded=t}get isLocalStorageNeeded(){return this._isLocalStorageNeeded}set pingIntervalInMillis(t){this._pingIntervalInMillis=t}get pingIntervalInMillis(){return this._pingIntervalInMillis}set isMOTEnabled(t){this._isMOTEnabled=t}get isMOTEnabled(){return this._isMOTEnabled}set pingName(t){this._pingName=t}get pingName(){return this._pingName}set pingData(t){this._pingData=t}get pingData(){return this._pingData}set additionalRecurrentPingParams(t){if(P(t)){for(const[e,i]of Object.entries(t))A(e)||L("custom dimension value should be a string"),p(i)||L(`${i} is not a function`);this._additionalRecurrentPingParams=t}}get additionalRecurrentPingParams(){return this._additionalRecurrentPingParams}}const{isNil:y,isntNil:O,isInteger:R,isString:B,isObject:M,isEmptyObject:b}=SymBfw.utils;class w extends o{constructor(){super(),this._containerKeyName=null,this._hbRecurrentPingInterval=null,this._pingData=null,this._pollTimer=null,this._additionalRecurrentPingParams=null}init(t){if(b(t))throw new Error("recurrentPingConfig cannot be null");if(!R(t._pingIntervalInMillis))throw new Error("ping interval should be an integer");if(!B(t._pingName))throw new Error("invalid ping name");if(!M(t._pingData))throw new Error("invalid ping data");this._hbRecurrentPingInterval=t._pingIntervalInMillis,this._pingData=t._pingData,this._containerKeyName=`${t._pingName}_lastupdatetime`,this._additionalRecurrentPingParams=t._additionalRecurrentPingParams}async _constructPingData(){const t=this._pingData;if(O(this._additionalRecurrentPingParams))for(const[e,i]of Object.entries(this._additionalRecurrentPingParams))t[e]=await i();return t}_checkPingTimeReached(){const t=JSON.parse(_.getContainerByName(this._containerKeyName));return!!y(t)||t+this._hbRecurrentPingInterval<this._getCurrentUTCTimestamp()}async perform(){this._checkPingTimeReached()&&(this._pingData=await this._constructPingData(),await this._sendTelemetry()),this._pollTimer=setTimeout((()=>{this.perform()}),i.HB_POLLING_TIME)}async _sendTelemetry(){try{await g.send(this._pingData),_.setContainerByName(this._containerKeyName,this._getCurrentUTCTimestamp())}catch(t){SymBfw.logger.error("Failed to send the recurrent ping and retry interval set")}}stop(){O(this._pollTimer)&&(clearTimeout(this._pollTimer),this._pollTimer=null)}_getCurrentUTCTimestamp(){return Math.floor((new Date).getTime())}}const{isString:C,isNil:v,isEmptyObject:D}=SymBfw.utils,U=new class{constructor(){this._pingObjMap={}}async init(){}async createPing(t){if(!(t instanceof f))throw new TypeError("Active vault user ping initialization failed - Invalid Configuration Object");if(v(t._isLocalStorageNeeded)||v(t._pingName))throw new Error("config object values cannot be empty");try{const{isLocalStorageNeeded:e}=t;if(await _.loadContainer(e),!D(this._pingObjMap[t._pingName]))throw new Error(`${t._pingName} already exists`);const i=new w;i.init(t),this._pingObjMap[t._pingName]=i,g.init(t)}catch(t){SymBfw.logger.error("Recurrent Ping Creation Failed :",t.message)}}start(t){if(!C(t))throw new Error("Invalid ping name");const e=this._pingObjMap[t];if(D(e))throw new Error("Invalid ping object");e.perform()}stop(t){if(!C(t))throw new Error("Invalid ping name");const e=this._pingObjMap[t];if(D(e))throw new Error("Invalid ping object");e.stop()}},H={hbManager:S,HBConfig:l,HBRecurrentPingConfig:f,hbRecurrentPingManager:U};return e.default})()));